FIFO 1

#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/types.h>


int main()
{
	int fd1,fd2;
	char * fifo1="fifo1";
	char * fifo2="fifo2";

	mkfifo(fifo1, 0666);
	

	char arr[40];
	int i;
	for( i = 0; i < sizeof(arr); i +=2 ){
	scanf("%c%c",&arr[i],&arr[i+1]);
	if( arr[i] == '\n' && arr[i+1] == '\n' )
	    break;
	}
	printf("%s", arr);
        arr[i]='$';
	        
	char buffer1[100], buffer2[100];
	//while (1)
	{
		//Pipe from file 1 to file 2
		fd1 = open(fifo1, O_WRONLY);

		printf("%s",arr);
		write(fd1, arr, strlen(arr)+1);
		
		close(fd1);
		
		sleep(2);
		
		//Pipe from file 2 to file 1
		fd2 = open(fifo2, O_RDONLY);
		
		read(fd2, buffer1, 100);
 
		printf("\nUser1: \n%s", buffer1);
		
		close(fd2);
	}
	
	return 0;
}


FIFO 2

#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/types.h>

int main()
{
	int fd1,fd2;
	char * fifo1="fifo1";
	char * fifo2="fifo2";

	
	

	char buffer1[100];
	char buffer2[100];
	
	//while (1)
	{
		sleep(1);
		//Pipe from file 1 to file 2
		int wc=0,lc=0,cc=0;
		fd1 = open(fifo1, O_RDONLY);
		
		read(fd1, buffer2, 100);
		
 		int i=0;
 		
 		while(buffer2[i]!='$')
 		{
 			if(buffer2[i]==' ' || buffer2[i]=='\n')
 			{
 				wc++;
 			}
 			if(buffer2[i]=='\n')
 			{
 				lc++;
 			}
 			if(buffer2[i]!='\n' && buffer2[i]!=' ' )
 			{
 				cc++;
 			}
 			i++;
 			
 		}
 		//wc++;
 		//lc++;
 		printf("\nUser2: %s\n", buffer2);
 		
 		//writing into the file
 		FILE* fptr1;
 		fptr1 = fopen("demo.txt", "w");
 		fprintf(fptr1,"Words : %d\t",wc);
 		fprintf(fptr1,"Lines : %d\t",lc);
 		fprintf(fptr1,"Characters : %d",cc);
 		fclose(fptr1);
 		
 		//reading from the file				
		FILE* fptr2;
 		fptr2 = fopen("demo.txt", "r");
 		fgets(buffer1,100,fptr2);
 		fclose(fptr2);
		
		close(fd1);
		
		//Pipe from file 2 to file 1
		mkfifo(fifo2, 0666);
		
 		printf("\n%s",buffer1);
		fd2 = open(fifo2, O_WRONLY);

		write(fd2, buffer1,100);
		
		close(fd2);
		
		
	}
	
	return 0;
}
